"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var faker = require("./faker.zh_CN");
var posts_1 = require("./types/posts");
var mocker = {
    post: function (id) {
        return {
            banner: faker.image.image(),
            creatAt: faker.date.past(),
            id: id || faker.random.number(),
            text: faker.lorem.paragraph(),
            title: faker.lorem.sentence(),
            type: posts_1.EPostType.Normal,
            user: mocker.user(),
            counter: {
                view: faker.random.number(),
                join: faker.random.number(),
                hot: false,
            }
        };
    },
    repeat: function (n, fn) {
        return Array(n).fill(0).map(function (_, id) { return fn(id); });
    },
    topic: function (id) {
        return {
            banner: faker.image.image(),
            creatAt: faker.date.past(),
            id: id || faker.random.number(),
            text: faker.lorem.paragraph(),
            title: faker.lorem.sentence(),
            type: posts_1.EPostType.Normal,
            user: mocker.user(),
        };
    },
    user: function (id) {
        return {
            avatar: faker.image.avatar(),
            id: id || faker.random.number(),
            name: faker.name.findName(),
        };
    },
};
exports.default = mocker;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1vY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxxQ0FBdUM7QUFFdkMsdUNBQWdEO0FBR2hELElBQU0sTUFBTSxHQUFHO0lBQ2IsSUFBSSxFQUFKLFVBQUssRUFBVztRQUNkLE9BQU87WUFFTCxNQUFNLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUU7WUFDM0IsT0FBTyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQzFCLEVBQUUsRUFBRSxFQUFFLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDL0IsSUFBSSxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFO1lBQzdCLEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRTtZQUM3QixJQUFJLEVBQUUsaUJBQVMsQ0FBQyxNQUFNO1lBQ3RCLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ25CLE9BQU8sRUFBRTtnQkFDUCxJQUFJLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7Z0JBQzNCLElBQUksRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtnQkFDM0IsR0FBRyxFQUFFLEtBQUs7YUFDWDtTQUNGLENBQUE7SUFDSCxDQUFDO0lBQ0QsTUFBTSxFQUFOLFVBQVUsQ0FBUyxFQUFFLEVBQXNCO1FBQ3pDLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQyxDQUFDLEVBQUUsRUFBRSxJQUFLLE9BQUEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFOLENBQU0sQ0FBQyxDQUFBO0lBQ2hELENBQUM7SUFDRCxLQUFLLEVBQUwsVUFBTSxFQUFXO1FBQ2YsT0FBTztZQUNMLE1BQU0sRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRTtZQUMzQixPQUFPLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDMUIsRUFBRSxFQUFFLEVBQUUsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUMvQixJQUFJLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUU7WUFDN0IsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO1lBQzdCLElBQUksRUFBRSxpQkFBUyxDQUFDLE1BQU07WUFDdEIsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUU7U0FDcEIsQ0FBQTtJQUNILENBQUM7SUFDRCxJQUFJLEVBQUosVUFBSyxFQUFXO1FBQ2QsT0FBTztZQUNMLE1BQU0sRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtZQUM1QixFQUFFLEVBQUUsRUFBRSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQy9CLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtTQUM1QixDQUFBO0lBQ0gsQ0FBQztDQUNGLENBQUE7QUFFRCxrQkFBZSxNQUFNLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vTWFyYWsvZmFrZXIuanNcclxuaW1wb3J0IGZha2VyID0gcmVxdWlyZSgnLi9mYWtlci56aF9DTicpXHJcblxyXG5pbXBvcnQgeyBFUG9zdFR5cGUsIElQb3N0IH0gZnJvbSAnLi90eXBlcy9wb3N0cydcclxuaW1wb3J0IHsgSVVzZXIgfSBmcm9tICcuL3R5cGVzL3VzZXInXHJcblxyXG5jb25zdCBtb2NrZXIgPSB7XHJcbiAgcG9zdChpZD86IG51bWJlcik6IElQb3N0IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIC8vIGJhbm5lcjogTWF0aC5yYW5kb20oKSA+IDAuMyA/IGZha2VyLmltYWdlLmltYWdlKCkgOiB1bmRlZmluZWQsXHJcbiAgICAgIGJhbm5lcjogZmFrZXIuaW1hZ2UuaW1hZ2UoKSxcclxuICAgICAgY3JlYXRBdDogZmFrZXIuZGF0ZS5wYXN0KCksXHJcbiAgICAgIGlkOiBpZCB8fCBmYWtlci5yYW5kb20ubnVtYmVyKCksXHJcbiAgICAgIHRleHQ6IGZha2VyLmxvcmVtLnBhcmFncmFwaCgpLFxyXG4gICAgICB0aXRsZTogZmFrZXIubG9yZW0uc2VudGVuY2UoKSxcclxuICAgICAgdHlwZTogRVBvc3RUeXBlLk5vcm1hbCxcclxuICAgICAgdXNlcjogbW9ja2VyLnVzZXIoKSxcclxuICAgICAgY291bnRlcjoge1xyXG4gICAgICAgIHZpZXc6IGZha2VyLnJhbmRvbS5udW1iZXIoKSxcclxuICAgICAgICBqb2luOiBmYWtlci5yYW5kb20ubnVtYmVyKCksXHJcbiAgICAgICAgaG90OiBmYWxzZSxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgcmVwZWF0PFQ+KG46IG51bWJlciwgZm46IChpZD86IG51bWJlcikgPT4gVCk6IFRbXSB7XHJcbiAgICByZXR1cm4gQXJyYXkobikuZmlsbCgwKS5tYXAoKF8sIGlkKSA9PiBmbihpZCkpXHJcbiAgfSxcclxuICB0b3BpYyhpZD86IG51bWJlcik6IElQb3N0IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGJhbm5lcjogZmFrZXIuaW1hZ2UuaW1hZ2UoKSxcclxuICAgICAgY3JlYXRBdDogZmFrZXIuZGF0ZS5wYXN0KCksXHJcbiAgICAgIGlkOiBpZCB8fCBmYWtlci5yYW5kb20ubnVtYmVyKCksXHJcbiAgICAgIHRleHQ6IGZha2VyLmxvcmVtLnBhcmFncmFwaCgpLFxyXG4gICAgICB0aXRsZTogZmFrZXIubG9yZW0uc2VudGVuY2UoKSxcclxuICAgICAgdHlwZTogRVBvc3RUeXBlLk5vcm1hbCxcclxuICAgICAgdXNlcjogbW9ja2VyLnVzZXIoKSxcclxuICAgIH1cclxuICB9LFxyXG4gIHVzZXIoaWQ/OiBudW1iZXIpOiBJVXNlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBhdmF0YXI6IGZha2VyLmltYWdlLmF2YXRhcigpLFxyXG4gICAgICBpZDogaWQgfHwgZmFrZXIucmFuZG9tLm51bWJlcigpLFxyXG4gICAgICBuYW1lOiBmYWtlci5uYW1lLmZpbmROYW1lKCksXHJcbiAgICB9XHJcbiAgfSxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbW9ja2VyXHJcbiJdfQ==